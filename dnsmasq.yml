- name: DNSMASQ
  hosts: localhost
  gather_facts: false
  tasks:

  - pause:
        prompt: |
            Make sure the newly added device in 'devices' ini file is shut down before proceeding the play.
            The device must exist first in 'dnsmasq.conf' so that it can request an IP address from DHCP Server.

  - include_vars: 'master.yml'

  - name: UPDATE APT CACHE and INSTALL DNSMASQ
    apt:
        cache_valid_time: 86400
        name: dnsmasq
        state: latest
    register: dnsmasq_apt

  - command: cat /etc/dnsmasq.conf
    changed_when: false
    register: cat_output

  - name: LIST OF MGMT HARDWARE ADDRESS
    set_fact:
        mgmt_hwaddr: |
            {%  set _mgmt_hwaddr = [] %}
            {%  for host in groups['cumulus'] | sort if hostvars[host]['mgmt_hwaddr'] != '' %}
            {%      do _mgmt_hwaddr.append(hostvars[host]['mgmt_hwaddr']) %}
            {%  endfor %}
            {{ _mgmt_hwaddr }}

  - fail:
        msg: |
            Duplicate mgmt_hwaddr:
            ======================
            {% for item in mgmt_hwaddr | duplicate_items %}
            {{ item }}
            {% endfor %}
    when: (mgmt_hwaddr | duplicate_items) | length > 0

  - name: NEW HOSTS
    set_fact:
        new_hosts: |
            {%  set current_hosts = cat_output['stdout'] | regex_findall('(?<=,)(\\D+.*)') %}
            {%  set _new_hosts = [] %}
            {%  for host in groups['cumulus']
                    if hostvars[host]['mgmt_hwaddr'] != ''
                        and host not in current_hosts %}
            {%      do _new_hosts.append(host) %}
            {%  endfor %}
            {{ _new_hosts }}

  - name: DNSMASQ.CONF TEMPLATE
    set_fact:
        dnsmasq_conf: |
            # Configuration file documentation http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq-man.html
            domain-needed
            bogus-priv
            no-resolv
            no-poll
            server={{ dns_forwarder }}
            listen-address=127.0.0.1
            listen-address={{ dns_server }}
            expand-hosts
            domain={{ domain }}
            dhcp-range={{ dhcp_range }}
            # DHCP OPTIONS
            dhcp-option=3,{{ gateway_address }}
            # STATIC HOST
            {% for host in groups['cumulus'] | sort if hostvars[host]['mgmt_hwaddr'] != '' %}
            dhcp-host={{ hostvars[host]['mgmt_hwaddr'] }},{{ host }}
            {% endfor %}

  - name: UPDATE DNSMASQ.CONF
    copy:
        content: '{{ dnsmasq_conf }}'
        dest: '/etc/dnsmasq.conf'
    register: dnsmasq

  - block:
      - name: TEST DNSMASQ CONFIG
        shell: 'dnsmasq --test'

      - name: RESTART DNSMASQ SERVICE
        systemd:
            name: dnsmasq
            state: restarted
    when: dnsmasq is changed

  - name: CAT /ETC/DNSMASQ.CONF
    debug: msg="{{ dnsmasq_conf }}"
    changed_when: dnsmasq is changed
    tags: [print_action]

  - name: MSG
    debug:
        msg: |
            Run the command below to deploy ssh-key to newly added device for the first time.
            $ ansible-playbook ssh-key.yml -l {{ new_hosts | join(',') }} --ask-pass
    when: new_hosts | length > 0
    tags: [print_action]
