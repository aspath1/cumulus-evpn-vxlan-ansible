ip_sub_interface:
{% for item in point_to_point | dict2items %}
{% set number_of_downlink = groups[item.value['downlink'].split(', ')[0]] | length %}
{% set number_of_uplink = groups[item.value['uplink'].split(', ')[0]] | length %}
{%    set starting_port = item.value['uplink'].split(', ')[1] | regex_search('\\d+') %}
{%    set port_name = item.value['uplink'].split(', ')[1] | regex_search('\\D+') %}
{%       for x in range(0, number_of_uplink) if inventory_hostname == groups[item.value['uplink'].split(', ')[0]][x] %}
{%          set l3vni = tenants_ | map(attribute='l3vni') | list | unique %}
{%          set starting_port = item.value['uplink'].split(', ')[1] | regex_search('\\d+') %}
{%          set port_name = item.value['uplink'].split(', ')[1] | regex_search('\\D+') %}
{%              for x1 in range(0, number_of_downlink) %}
{%                  for x2 in range(0, l3vni | length) %}
  - ip_address: {{ ptp_base_subnet | default('192.168.0.0/16') | ipsubnet(24, x1) | ipsubnet(30, x2) | ipaddr('1') }}
    iface_name: {{ port_name | string + (starting_port | int + x1) | string + '.' + (l3vni[x2] | string) }}
    vrf: {{ tenants_ | selectattr('l3vni', 'equalto', l3vni[x2]) | map(attribute='vrf') | list | unique | join('') }}
    neighbor: {{ groups[item.value['downlink'].split(', ')[0]][x1] }}
{%                  endfor %}
{%              endfor %}
{%       endfor %}
{%       for x in range(0, number_of_downlink) if inventory_hostname == groups[item.value['downlink'].split(', ')[0]][x] %}
{%          set l3vni = tenants_ | map(attribute='l3vni') | list | unique %}
{%          set starting_port = item.value['downlink'].split(', ')[1] | regex_search('\\d+') %}
{%          set port_name = item.value['downlink'].split(', ')[1] | regex_search('\\D+') %}
{%              for x1 in range(0, number_of_uplink) %}
{%                  for x2 in range(0, l3vni | length) %}
  - ip_address: {{ ptp_base_subnet | default('192.168.0.0/16') | ipsubnet(24, x) | ipsubnet(30, x2) | ipaddr('2') }}
    iface_name: {{ port_name | string + (starting_port | int + x1) | string + '.' + (l3vni[x2] | string) }}
    vrf: {{ tenants_ | selectattr('l3vni', 'equalto', l3vni[x2]) | map(attribute='vrf') | list | unique | join('') }}
    neighbor: {{ groups[item.value['uplink'].split(', ')[0]][x1] }}
{%                  endfor %}
{%              endfor %}
{%       endfor %}
{% endfor %}


{#% for item in point_to_point | dict2items %}
{% set number_of_downlink = groups[item.value['downlink'].split(', ')[0]] | length %}
{% set number_of_uplink = groups[item.value['uplink'].split(', ')[0]] | length %}
{%    set starting_port = item.value['uplink'].split(', ')[1] | regex_search('\\d+') %}
{%    set port_name = item.value['uplink'].split(', ')[1] | regex_search('\\D+') %}
{%       for x in range(0, number_of_uplink) if inventory_hostname == groups[item.value['uplink'].split(', ')[0]][x] %}
{%          set starting_port = item.value['uplink'].split(', ')[1] | regex_search('\\d+') %}
{%          set port_name = item.value['uplink'].split(', ')[1] | regex_search('\\D+') %}
{%          set ptp_base_subnet = '192.168.0.0/16' | ipsubnet(24, x) %}
{%              for x1 in range(0, number_of_downlink) %}
  - ip_address: {{ ptp_base_subnet | ipsubnet(30, x1) | ipaddr('1') }}
    interface_name: {{ port_name | string + (starting_port | int + x1) | string }}
{%              endfor %}
{%       endfor %}
{%       for x in range(0, number_of_downlink) if inventory_hostname == groups[item.value['downlink'].split(', ')[0]][x] %}
{%          set starting_port = item.value['downlink'].split(', ')[1] | regex_search('\\d+') %}
{%          set port_name = item.value['downlink'].split(', ')[1] | regex_search('\\D+') %}
{%              for x1 in range(0, number_of_uplink) %}
{%              set ptp_base_subnet = '192.168.0.0/16' | ipsubnet(24, x1) %}
  - ip_address: {{ ptp_base_subnet | ipsubnet(30, x) | ipaddr('2') }}
    interface_name: {{ port_name | string + (starting_port | int + x1) | string }}
{%              endfor %}
{%       endfor %}
{% endfor %#}
