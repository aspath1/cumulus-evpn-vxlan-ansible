- include_tasks: routing.yml

- name: net show configuration commands | grep 'net add bgp'
  shell: "net show configuration commands | grep 'net add bgp'"
  register: _running_configs
  ignore_errors: true
  changed_when: false

- name: bgp running configs (1)
  set_fact:
    running_configs: "{{ _running_configs.stdout_lines | map('trim') | list }}"

- name: del bgp autonomous-system
  nclu:
    template: |
      {%  set running_asn = _running_configs.stdout | regex_search('(?<=autonomous-system\\s)\\d+') %}
      {%  if running_asn | int != bgp[inventory_hostname]['global']['as'] %}
      del bgp autonomous-system {{ running_asn }}
      {%  endif %}
    abort: true
  register: nclu
  when: _running_configs['rc'] != 1
- block:
  - name: commit changes (1)
    nclu:
      commands:
        - commit
  - name: bgp running configs (2)
    set_fact:
      running_configs: "{{ [] }}"
  when: nclu['changed']

- name: intent bgp configs
  set_fact:
    intent_configs: |
      {%  set global = bgp[inventory_hostname]['global'] %}
      {#  Add BGP #}
      net add bgp autonomous-system {{ global['as'] }}
      net add bgp router-id {{ global['router_id'] }}
      net add bgp bestpath as-path multipath-relax
      {%  for peer_group, v in global['neighbors'] | groupby('group') %}
      net add bgp neighbor {{ peer_group }} peer-group
      net add bgp neighbor {{ peer_group }} remote-as external
      net add bgp l2vpn evpn  neighbor {{ peer_group }} activate
      {%      for item in v %}
      net add bgp neighbor {{ item['neighbor'] }} interface peer-group {{ item['group'] }}
      {%      endfor %}
      {%  endfor %}
      {%  if inventory_hostname not in groups['spine'] %}
      net add bgp l2vpn evpn  advertise-all-vni
      {%  endif %}
      net add bgp ipv4 unicast redistribute connected route-map LOOPBACK_ROUTES
      {%  for vrf, v in  bgp[inventory_hostname].items() if vrf != 'global' %}
      net add bgp vrf {{ vrf }} autonomous-system {{ v['as'] }}
      net add bgp vrf {{ vrf }} router-id {{ v['router_id'] }}
      net add bgp vrf {{ vrf }} ipv4 unicast network 10.128.0.0/16
      {%  set vlans_subnet = ('_vlans_subnet' | get_config).values() | map(attribute='subnet') | list %}
      {%  for item in vlans_subnet %}
      net add bgp vrf {{ vrf }} ipv4 unicast network {{ item }}
      {%  endfor %}
      {%      for item in v['neighbors'] %}
      net add bgp vrf {{ vrf }} neighbor {{ item['neighbor'] }} remote-as {{ item['as'] }}
      {%      endfor %}
      net add bgp vrf {{ vrf }} l2vpn evpn  advertise ipv4 unicast
      {%  endfor %}

- name: net del/add bgp
  nclu:
    template: |
        {%  set nclu = [] %}
        {%  set _intent_configs = intent_configs.split('\n') | reject('equalto', '') | list %}
        {%  for item_del in running_configs if item_del not in _intent_configs %}
        {%      set _item_del = item_del.replace('net add', 'del') %}
        {%      do nclu.append(_item_del) %}{% endfor %}
        {%  for item_add in _intent_configs if item_add not in running_configs %}
        {%      set _item_add = item_add.replace('net add', 'add') %}
        {%      do nclu.append(_item_add) %}{% endfor %}
        {%  for item in nclu %}
        {{ item }}
        {%  endfor %}
    abort: true
  register: nclu
- name: commit changes (2)
  nclu:
    commands:
      - commit
  when: nclu['changed']
