- name: show configuration commands | egrep 'set protocols bgp \\w+.*'
  vyos_command:
    commands:
        - show configuration commands | egrep 'set protocols bgp \w+.*'
  register: show

- name: bgp running configs
  set_fact:
    running_configs: "{{ show.stdout_lines | flatten | reject('equalto', '') | list }}"

- name: bgp intent configs
  set_fact:
    intent_configs: |
      {%  for vrf, v in bgp[inventory_hostname].items() %}
      set protocols bgp {{ v['as'] }} maximum-paths ebgp '2'
      set protocols bgp {{ v['as'] }} parameters router-id '{{ v['router_id'] }}'
      {%      for item in v['neighbors'] %}
      set protocols bgp {{ v['as'] }} neighbor {{ item['neighbor'] }} remote-as '{{ item['as'] }}'
      set protocols bgp 64531 neighbor {{ item['neighbor'] }} default-originate route-map 'rDEFAULT'
      {%      endfor %}
      set protocols bgp {{ v['as'] }} redistribute 'static'
      {%  endfor %}
      set protocols static route 0.0.0.0/0 next-hop '192.168.122.1'


- name: bgp commands
  set_fact:
    commands: |
      {%  set vyos = [] %}
      {%  set _intent_configs = intent_configs.split('\n') | reject('equalto', '') | list %}
      {%  for item_del in running_configs if item_del not in _intent_configs %}
      {%      set _item_del = item_del.replace('set', 'delete').strip() %}
      {%      do vyos.append(_item_del) %}{% endfor %}
      {%  for item_add in _intent_configs if item_add not in running_configs %}
      {%      set _item_add = item_add.strip() %}
      {%      do vyos.append(_item_add) %}{% endfor %}
      {{ vyos | unique }}

- name: set/delete bgp configs
  vyos_config:
    lines:
      - "{{ item }}"
    save: yes
  loop: "{{ commands }}"
  when: commands | length > 0
