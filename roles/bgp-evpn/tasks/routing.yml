- name: net show configuration commands | grep 'net add routing'
  shell: "net show configuration commands | grep 'net add routing'"
  register: _running_configs
  ignore_errors: true
  changed_when: false

- name: routing running configs
  set_fact:
    running_configs: "{{ _running_configs.stdout_lines | map('trim') | list }}"
    running_configs_: "{{ _running_configs.stdout }}"

- name: routing intent configs
  set_fact:
    intent_configs: |
      {# Default routing commands #}
      net add routing defaults datacenter
      net add routing service integrated-vtysh-config
      net add routing log syslog informational
      {# Loopback routes #}
      net add routing route-map LOOPBACK_ROUTES permit 10 match interface lo

- name: net del/add routing
  nclu:
    template: |
      {%  set nclu = [] %}
      {%  set _intent_configs = intent_configs.split('\n') | reject('equalto', '') | list %}
      {%  for item_del in running_configs if item_del not in _intent_configs %}
      {%      set _item_del_permit = item_del.replace('net add', 'del') | regex_search('\w+.*(?:permit|deny)\s\d+') %}
      {%      set _item_del_name = item_del.replace('net add ', 'del')| regex_search('\w+.*route-map\s\S+') %}
      {%      set name = item_del | regex_search('(?<=route-map\s)(\S+)') %}
      {%          if name is not none %}
      {%              set x = running_configs_ | regex_findall(name | default(none)) %}
      {%                  if x | length > 1 %}
      {%                      do nclu.append(_item_del_permit) %}
      {%                  else %}
      {%                      do nclu.append(_item_del_name) %}
      {%                  endif %}
      {%          endif %}
      {%  endfor %}
      {%  for item_add in _intent_configs if item_add not in running_configs %}
      {%      set _item_add = item_add.replace('net add', 'add') %}
      {%      do nclu.append(_item_add) %}{% endfor %}
      {%  for item in nclu %}
      {{ item }}
      {%  endfor %}
    abort: true
  register: nclu
- name: commit changes
  nclu:
    commands:
      - commit
  when: nclu['changed']
