# - name: intent bgp configs
#   set_fact:
#     intent_configs: |
#       {%  set global = bgp[inventory_hostname]['global'] %}
#       {#  Add BGP #}
#       net add bgp autonomous-system {{ global['as_number'] }}
#       net add bgp router-id {{ global['router_id'] }}
#       net add bgp bestpath as-path multipath-relax
#       {%  for peer_group in global['peer_groups'] %}
#       net add bgp neighbor {{ peer_group }} peer-group
#       net add bgp neighbor {{ peer_group }} remote-as external
#       net add bgp neighbor {{ peer_group }} capability extended-nexthop
#       {#  Activate L2VPN and advertise vni #}
#       net add bgp l2vpn evpn  neighbor {{ peer_group }} activate
#       {%  endfor %}
#       {%  if inventory_hostname in groups['leaf'] %}
#       net add bgp l2vpn evpn  advertise-all-vni
#       {%  endif %}
#       {#  Add neighbor interfaces #}
#       {%  for neighbor, v in global['neighbors'].items() %}
#       net add bgp neighbor {{ neighbor }} interface peer-group {{ v['peer_group'] }}
#       {%  endfor %}
#       {#  Redistribute loopback #}
#       net add bgp ipv4 unicast redistribute connected route-map LOOPBACK_ROUTES



# - name: net add
#   nclu:
#     template: |
#       {%  set nclu = [] %}
#       {%  set _intent_commands = intent_commands.split('\n') %}
#       {%  for item in _intent_commands if item not in running_commands %}
#       {%    do nclu.append(item.strip()) %}
#       {%  endfor %}
#       {{ nclu }}
#   when: _running_configs['rc'] != 1

      # {%  for command in nclu %}
      # {{ command.replace('net ', '') }}
      # {%  endfor %}
# - name: net add
#   nclu:
#     template: |
#       {%  set nclu = [] %}
#       {%  set _intent_commands = intent_commands.split('\n') %}
#       {%  for item in _intent_commands if item not in running_commands %}
#       {%    do nclu.append(item.strip()) %}
#       {%  endfor %}
#       {%  for command in nclu %}
#       {{ command.replace('net ', '') }}
#       {%  endfor %}
#     atomic: true

# - name: del bgp neighbors
#   nclu:
#     template: |
#       {%  set intent_neighbors = bgp_neighbors[inventory_hostname]['global']['neighbors'] %}
#       {%  for neighbor in _bgp_neighbors.keys() if neighbor not in intent_neighbors.keys() %}
#       {%    if neighbor.startswith('swp') %}
#       del bgp neighbor {{ neighbor }} interface peer-group {{ _bgp_neighbors[neighbor]['peerGroup'] }}
#       {%    else %}
#       del bgp neighbor {{ neighbor }} peer-group {{ _bgp_neighbors[neighbor]['peerGroup'] }}
#       {%    endif %}
#       {%  endfor %}
#     atomic: true
#   when: _bgp_neighbors != "Failed on line show bgp neighbor json"
#
# - name: add bgp
#   nclu:
#     template: |
#       {%  set global = bgp_neighbors[inventory_hostname]['global'] %}
#       {%  set lo = loopback[inventory_hostname] %}
#       {#  Add BGP #}
#       add bgp autonomous-system {{ global['as_number'] }}
#       add bgp router-id {{ global['router_id'] }}
#       add bgp bestpath as-path multipath-relax
#       {%  for peer_group in global['peer_groups'] %}
#       add bgp neighbor {{ peer_group }} peer-group
#       add bgp neighbor {{ peer_group }} remote-as external
#       add bgp neighbor {{ peer_group }} capability extended-nexthop
#       {#  Activate L2VPN and advertise vni #}
#       add bgp l2vpn evpn neighbor {{ peer_group }} activate
#       {%  endfor %}
#       {%  if inventory_hostname in groups['leaf'] %}
#       add bgp l2vpn evpn advertise-all-vni
#       {%  endif %}
#       {#  Add neighbor interfaces #}
#       {%  for neighbor, v in global['neighbors'].items() %}
#       add bgp neighbor {{ neighbor }} interface peer-group {{ v['peer_group'] }}
#       {%  endfor %}
#       {#  Redistribute loopback #}
#       add routing route-map LOOPBACK_ROUTES permit 10 match interface lo
#       add bgp ipv4 unicast redistribute connected route-map LOOPBACK_ROUTES
#     atomic: true
#
# - name: net show commit history
#   nclu:
#     commands:
#       - show commit history
#   register: commit_history
#
# - name: list of commits
#   set_fact:
#     _commit_history: "{{ commit_history['msg'] }}"
#
# - name: show commit
#   nclu:
#     template: |
#       {%  set x = _commit_history | regex_findall('^(\\d+)', multiline=True) %}
#       {%  for item in x[-2:] %}
#       show commit {{ item }}
#       {%  endfor %}

# - name: configure bgp vrf
#   set_fact:
#     template4: |
#       {% for vrf, param in bgp_neighbors[inventory_hostname].items() if vrf != 'global' %}
#       add bgp vrf {{ vrf }} autonomous-system {{ param['as_number'] }}
#       add bgp vrf {{ vrf }} router-id {{ param['router_id'] }}
#       {%    for neighbor, v in v['neighbors'].items() %}
#       add bgp vrf {{ vrf }} neighbor {{ neighbor }} remote-as {{ v['remote_as'] }}
#       {%    endfor %}
#       add bgp vrf {{ vrf }} l2vpn evpn advertise ipv4 unicast
#       {% endfor %}
