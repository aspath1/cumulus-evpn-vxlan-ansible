- block:
    - name: BGP RUNNING CONFIGURATION COMMANDS
      set_fact:
          runconfgs: "{{ showconfg['stdout']
              | regex_findall('.*bgp \\d+ .*') }}"

    - name: NORMALISED BGP VARIABLES
      set_fact:
          _bgp_neighbors: |
              {%  set bgp_neighbors_ = bgp_neighbors[inventory_hostname].values() | flatten %}
              {%  set x = {'as': {}, 'router_id': {}, 'neighbors': []} %}
              {%  for k, v in bgp_neighbors_ | groupby('as') %}
              {%    do x.__setitem__('as', k) %}
              {%    for item in v %}
              {%        do x.__setitem__('router_id', item['router_id']) %}
              {%        do x['neighbors'].extend(item['neighbors']) %}
              {%    endfor %}
              {%  endfor %}
              {{ x }}

    #### Change 'intent.yml' file for the intent configurations commands ####
    - include_tasks: intent.yml

    - name: AWAITING BGP CONFIGURATION COMMANDS
      set_fact:
          config_commands: |
              {%  set _intentconfgs = intentconfgs.split('\n')
                    | reject('equalto', '') | list %}
              {%  for confg in runconfgs if confg not in _intentconfgs %}
              {{ confg.replace('set', 'delete') }}
              {%  endfor %}
              {%  for confg in _intentconfgs if confg not in runconfgs %}
              {{ confg }}
              {%  endfor %}

    - block:
        - name: UPDATE BGP.CONF
          copy:
              content: "{{ config_commands }}"
              dest: "{{ role_path }}/config/{{ inventory_hostname }}-bgp.conf"
          delegate_to: localhost
          changed_when: false

        - name: PUSH BGP CONFIGURATION COMMANDS
          napalm_install_config:
              hostname: '{{ inventory_hostname }}'
              username: '{{ ansible_user }}'
              dev_os: '{{ ansible_network_os }}'
              password: '{{ ansible_ssh_pass }}'
              config_file: '{{ role_path }}/config/{{ inventory_hostname }}-bgp.conf'
              commit_changes: '{{ not ansible_check_mode }}'
          changed_when: not ansible_check_mode
          register: result

        - name: "{{ 'COMMITTED CHANGES' if not ansible_check_mode else 'PENDING CHANGES' }}"
          debug:
              msg: |
                  {{ result.msg }}
                  # Set-style configuration commands #
                  ====================================
                  {%  for config in config_commands.split('\n') | reject('equalto', '') | list  %}
                  {{ config }}
                  {%  endfor %}
          changed_when: not ansible_check_mode
          tags: [print_action]
      when: config_commands != '\n'
  when: inventory_hostname in bgp_neighbors
  check_mode: false
