- name: generate host vxlan variables
  set_fact:
    vxlan: "{{ 'vxlan' | get_config }}"
  run_once: true

- name: net show configuration commands | egrep 'net add vxlan (\w+,.*|\w+-.*|\w+) (vxlan|bridge access|bridge learning).*'
  shell: "net show configuration commands | egrep 'net add vxlan (\\w+,.*|\\w+-.*|\\w+) (vxlan|bridge access|bridge learning).*'"
  register: _running_configs
  ignore_errors: true
  changed_when: false

- name: vxlan interface intent configs (1)
  set_fact:
    running_configs: "{{ _running_configs.stdout_lines | map('trim') | list }}"

- name: vxlan intent configs
  set_fact:
    intent_configs: |
      {%  set _vxlan = vxlan[inventory_hostname] %}
      {%  set base_name = _vxlan['vxlan'] | map(attribute='name') | join(',') | regex_search('(\w+|\d+)(?<!\d)') %}
      {%  set summary = base_name + _vxlan['vxlan'] | map(attribute='id') | list | range_to_cluster %}
      {%  for item in _vxlan['vxlan'] %}
      net add vxlan {{ item['name'] }} vxlan id {{ item['id'] }}
      net add vxlan {{ item['name'] }} bridge access {{ item['vlan'] }}
      {%  endfor %}
      net add vxlan {{ summary }} vxlan local-tunnelip {{ _vxlan['local_tunnelip'] }}
      net add vxlan {{ summary }} bridge learning off

- name: net del/add vxlan interfaces (1)
  nclu:
    template: |
      {%  set nclu = [] %}
      {%  set _intent_configs = intent_configs.split('\n') | reject('equalto', '') | list %}
      {%  for item_del in running_configs if item_del not in _intent_configs %}
      {%    set _item_del = item_del.replace('net add', 'del') %}
      {%    set x = _item_del | regex_search('del vxlan \w+(?= \w+ id)') %}
      {%    if x is not none %}
      {%      do nclu.append(x) %}
      {%    endif %}
      {%  endfor %}
      {%  for item_add in _intent_configs if item_add not in running_configs %}
      {%    set _item_add = item_add.replace('net add', 'add') %}
      {%      do nclu.append(_item_add) %}
      {%  endfor %}
      {% for item in nclu %}
      {{ item }}
      {% endfor %}
    abort: true
  register: nclu
- name: commit changes (1)
  nclu:
    commands:
      - commit
  when: nclu['changed']
