- name: generate host svi variables
  set_fact:
    svi: "{{ 'svi' | get_config }}"

- name: net show interface all json
  nclu:
    commands:
      - show interface json
  register: net_show
  changed_when: false

- name: vlan interfaces running configs (1)
  set_fact:
    running_interfaces: "{{ net_show['msg'] }}"

- name: net del vlan interfaces
  nclu:
    template: |
      {%  set vifs =  running_interfaces.keys() | select('search', 'vlan') | reject('search', '-v') | list %}
      {%  for vif in vifs %}
      {%      set _vif = vif.split('vlan')[1] %}
      {%      if _vif not in svi[inventory_hostname].keys() %}
      del vlan {{ _vif }}{% endif %}
      {%  endfor %}
  register: nclu
- name: commit changes (1)
  nclu:
    commands:
      - commit
  when: nclu['changed']

- name: net show configuration commands | egrep 'net add vlan'
  shell: "net show configuration commands | egrep 'net add vlan'"
  register: _running_configs
  ignore_errors: true
  changed_when: false

- name: vlan interfaces running configs (2)
  set_fact:
    running_configs: "{{ _running_configs.stdout_lines }}"

- name: vlan interfaces intent configs
  set_fact:
    intent_configs: |
      {% for id, svi in svi[inventory_hostname].items() %}
      {%    if svi.type == 'l2' %}
      net add vlan {{ id }} ip address {{ svi.address }}
      net add vlan {{ id }} ip address-virtual {{ svi.virtual_mac }} {{ svi.virtual_address }}
      net add vlan {{ id }} vlan-id {{ id }}
      net add vlan {{ id }} vlan-raw-device bridge
      net add vlan {{ id }} vrf {{ svi.tenant }}
      {%    elif svi.type == 'l3' and svi.router_mac is defined %}
      net add vlan {{ id }} vlan-id {{ id }}
      net add vlan {{ id }} vlan-raw-device bridge
      net add vlan {{ id }} hwaddress {{ svi.router_mac }}
      net add vlan {{ id }} vrf {{ svi.tenant }}
      {%    else %}
      net add vlan {{ id }} vrf {{ svi.tenant }}
      {%    endif %}
      {% endfor %}

- name: net del/add vlan interfaces
  set_fact:
    template: |
      {%  set nclu = [] %}
      {%  set _intent_configs = intent_configs.split('\n') | reject('equalto', '') | list %}
      {%  for item_del in running_configs if item_del not in _intent_configs %}
      {%      set _item_del = item_del.replace('add ', 'del ').replace('net', '').strip() %}
      {%      do nclu.append(_item_del) %}{% endfor %}
      {%  for item_add in _intent_configs if item_add not in running_configs %}
      {%      set _item_add = item_add.replace('net', '').strip() %}
      {%      do nclu.append(_item_add) %}{% endfor %}
      {%  for item in nclu %}
      {{ item }}{% endfor %}
  register: nclu
- name: commit changes (2)
  nclu:
    commands:
      - commit
  when: nclu['changed']



#################################################
# - name: net show interface all json
#   nclu:
#     commands:
#       - show interface json
#   register: sh_intfs_all_json
#   changed_when: false
#
# - name: interfaces
#   set_fact:
#     intfs: "{{ sh_intfs_all_json['msg'] }}"
#
# - name: del svi
#   nclu:
#     template: |
#       {%  set intent_svi = svi[inventory_hostname] %}
#       {%  set virtual =  intfs.keys() | select('search', '-v') | list %}
#       {%  set vifs =  intfs.keys() | select('search', 'vlan') | reject('search', '-v') | list %}
#       {%  for v in virtual %}
#       {%    set vlan = v.split('-')[0].split('vlan')[1] %}
#       {%    set vmac = intfs[v]['iface_obj']['mac'] %}
#       {%    set vip = intfs[v]['iface_obj']['ip_address']['allentries'][0] %}
#       {%    if vlan in intent_svi.keys() %}
#       {%      set ips = intfs['vlan' + vlan]['iface_obj']['ip_address']['allentries'] %}
#       {%      if vmac != intent_svi[vlan]['virtual_mac'] or
#                  vip != intent_svi[vlan]['virtual_address'] %}
#       del vlan {{ vlan }} ip address-virtual {{ vmac }} {{ vip }}
#       {%      endif %}
#       {%      for ip in ips if ip != intent_svi[vlan]['address'] %}
#       del vlan {{ vlan }} ip address {{ ip }}
#       {%      endfor %}
#       {%    endif %}
#       {%  endfor %}
#       {%  for vif in vifs %}
#       {%    set _vif = vif.split('vlan')[1] %}
#       {%    if _vif not in intent_svi.keys() %}
#       del vlan {{ _vif }}
#       {%    endif %}
#       {%  endfor %}
#     atomic: true
#   register: net_del


  #   atomic: true
  # register: nclu

# - name: net show commit last
#   nclu:
#     commands:
#       - show commit last
#   when: net_del['changed'] or net_add['changed']
